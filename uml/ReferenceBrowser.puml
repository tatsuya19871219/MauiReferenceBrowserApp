@startuml ReferenceBrowser
class SearchUri {
    - uri : Uri 
    + Host : string 
    + LocalPath : string
    + Segments : string[]
    + SearchUri(uriString : string)
    + ToString() : string
}

SearchUri <|-- ReferenceSite
class ReferenceSite {
    + Name : string 
    + ReferenceSite(name : string, uriString : string)
    + Contains(searchUri : SearchUri) : bool
}

SearchUri <--o SearchHistory
class SearchHistory {
    - history : List<SearchUri>
    - location : int 
    - reference : ReferenceSite
    + SearchHistory(reference : ReferenceSite)
    + IsCurrentUri(uri : SearchUri) : bool
    + TryPush(uri : SearchUri) : bool
    + TryPop(out uri : SearchUri) : bool
    - MakeNewBranch(uri : SearchUri) : void
    + GoForward() : void
    + GoBack() : void
}

SearchItemDatabase +-- SearchItem 
class SearchItem 
{
    + ID : int
    + URL : string
    + COUNT_MAJOR : int
    + COUNT_MINOR : int
}

SearchItem <--o SearchItemDatabase
' class SearchItemDatabase
class SearchItemDatabase
{
    - Database : SQLiteAsyncConnection 
    - searchItems : List<SearchItem>
    - searchIndexByID : Dictionary<int, int> 
    - searchIndexByURL : Dictionary<string, int>
    + IsInitialized : bool
    + SearchItemDatabase()
    - Init() : void
    # GetItems() : List<SearchItem>
    + HasItemBySearchUri(searchUri : SearchUri) : bool
    # AddNewItemAsync(uri : SearchUri, count : int) : Task
    # UpdateItemAsync(uri : SearchUri, count : int) : Task
    # UpdateDatabaseAsMajorAsync() : Task
    - UpdateSearchItemAsMajorAsync() : Task
    + ClearDatabaseAsync() : bool
}

SearchItemDatabase <|- ReferenceSearchItemDatabase
class ReferenceSearchItemDatabase
{
    - referenceSite : ReferenceSite
    + ReferenceSearchItemDatabase()
    + SetReferenceSite(reference : ReferenceSite) : void
    + TryPushSearchUri(uri : SearchUri) : bool
    + GetSearchItemInfos() : List<SearchItemInfo>
    - ConstructSearchItemInfo(item : SearchItem) : SearchItemInfo
    + PrepareToSync() : void
}

ReferenceSite <-- SearchItemInfo
SearchUri <-- SearchItemInfo
SearchItemInfo <-- ReferenceSearchItemDatabase
class SearchItemInfo
{
    - reference : ReferenceSite
    - searchUri : SearchUri
    + UriString : string
    + PageName : string
    + DirectoryName : string
    + ID : int
    + MajorCount : int
    + MinorCount : int
    ' + URI : string
    + Details : string
    + SearchItemInfo(reference : ReferenceSite, searchUri : SearchUri, countMajor : int, countMinor : int, id : int)
}

SearchItemInfo <--o SearchItemInfosViewModel
ReferenceSearchItemDatabase <-- SearchItemInfosViewModel
class SearchItemInfosViewModel
{
    - database : ReferenceSearchItemDatabase
    + SearchItemInfos : ObservableCollection<SearchItemInfo>
    + BindDatabase(database : ReferenceSearchItemDatabase) : void 
    + Refresh() : void
}


ReferenceSearchItemDatabase <- WebViewModel
SearchHistory <-- WebViewModel
ReferenceSite <-- WebViewModel
class WebViewModel 
{
    + CurrentLocation : string
    + CurrentStatus : string
    - reference : ReferenceSite
    - database : ReferenceSearchItemDatabase
    - SearchHistory : SearchHistory
    + WebViewModel(database : ReferenceSearchItemDatabase)
    + BindWebView(webView : WebView)
    + SetReferenceSite(reference : ReferenceSite) : void
    + NavigatingCallback(sender : object, e : WebNavigatingEventArgs) : void
    + NavigatedCallback(sender : object, e : WebNavigatedEventArgs) : void
    + GoHome(sender : object, e : EventArgs) : void
    + GoNext(sender : object, e : EventArgs) : void
    + GoPrevious(sender : object, e : EventArgs) : void
    + GoTo(uri : SearchUri) : void
}

@enduml